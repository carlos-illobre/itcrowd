/movies/{id}/directors:
  post:
    tags: 
      - Director
    summary:  Adds a director to the movie
    description: If the director does not exist the it creates the person and then adds it to the movie. If the director already exists then the existent director is added to the movie.
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
    - name: id
      in: path
      description: movie id
      required: true
      type: integer
      example: 1
    - name: Authorization
      in: header
      description: Authorization token
      required: true
      type: string
      example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiaWQiOjF9LCJpYXQiOjE1MTAxNTI2MDEsImV4cCI6MTUxMDIzOTAwMX0.5JmvBOkG3jkhQfZwB61o650P0XDqIijuRv41m6Sn6Qk
    - name: body
      in: body
      required: true
      schema:
        type: object
        required:
          - firstName
          - lastName
        properties:
          firstName:
            type: string
            example: Ted 
            description: first name
            minLength: 1
          lastName:
            type: string
            minLength: 1
            example: Kotcheff
            description: last name
    responses:
      201:
        description: Created
        headers:
          Location:
            description: Created person uri
            type: string
            format: uri
            example: http://localhost:8080/rest/people/1
        schema:
          type: object
          required:
            - _links
          properties:
            _links:
              type: object
              required:
                - self
                - remove
              properties:
                self:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8080/rest/people/1
                movie:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8080/rest/movies/1
                remove:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8080/rest/movies/1/directors/1
      400:
        description: Bad Request
        schema:
          type: object
          required:
            - error
          properties:
            error:
              type: string
              example: Validation error, The first name is mandatory
      500:
        description: Internal server error
