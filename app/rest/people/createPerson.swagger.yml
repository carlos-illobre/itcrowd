/people:
  post:
    tags: 
      - Person
    summary:  Creates a new person
    description: Creates a new person
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
    - name: Authorization
      in: header
      description: Authorization token
      required: true
      type: string
      example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiaWQiOjF9LCJpYXQiOjE1MTAxNTI2MDEsImV4cCI6MTUxMDIzOTAwMX0.5JmvBOkG3jkhQfZwB61o650P0XDqIijuRv41m6Sn6Qk
    - name: body
      in: body
      required: true
      schema:
        type: object
        required:
          - firstName
          - lastName
        properties:
          firstName:
            type: string
            example: Sylvester
            description: first name
            minLength: 1
          lastName:
            type: string
            minLength: 1
            example: Stallone
            description: last name
    responses:
      201:
        description: Created
        headers:
          Location:
            description: Created person uri
            type: string
            format: uri
            example: http://localhost:8080/rest/people/1
        schema:
          type: object
          required:
            - _links
          properties:
            _links:
              type: object
              required:
                - self
                - aliases
                - moviesAsActor
                - moviesAsDirector
                - moviesAsProducer
              properties:
                self:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8080/rest/people/1
                aliases:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8080/rest/people/1/aliases
                moviesAsActor:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8080/rest/movies?actorId=1
                moviesAsDirector:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8080/rest/movies?directorId=1
                moviesAsProducer:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8080/rest/movies?producerId=1
      400:
        description: Bad Request
        schema:
          type: object
          required:
            - error
          properties:
            error:
              type: string
              example: Validation error, The first name is mandatory
      500:
        description: Internal server error
